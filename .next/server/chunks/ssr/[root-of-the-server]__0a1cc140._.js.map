{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/data.ts"],"sourcesContent":["// Data models and storage utilities\nexport interface Account {\n  id: string;\n  name: string;\n  accountNumber: string;\n  createdAt: string;\n}\n\nexport interface Trade {\n  id: string;\n  accountId: string;\n  tradeType: 'BUY' | 'SELL';\n  tradeDate: string;\n  instrument: string;\n  lotSize: number;\n  profitLoss: number; // positive for profit, negative for loss\n  notes?: string;\n}\n\nexport interface UserProfile {\n  name: string;\n  email: string;\n  avatar?: string;\n  bio?: string;\n}\n\n// Local storage keys\nconst STORAGE_KEYS = {\n  ACCOUNTS: 'trading-accounts',\n  TRADES: 'trading-trades',\n  PROFILE: 'trading-profile',\n} as const;\n\n// Default data\nexport const defaultProfile: UserProfile = {\n  name: 'PT_FX',\n  email: 'pt.fx@trader.com',\n  bio: 'Full-time funded trader',\n};\n\n// Storage utilities\nexport const storage = {\n  getAccounts: (): Account[] => {\n    if (typeof window === 'undefined') return [];\n    const data = localStorage.getItem(STORAGE_KEYS.ACCOUNTS);\n    return data ? JSON.parse(data) : [];\n  },\n\n  setAccounts: (accounts: Account[]) => {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(STORAGE_KEYS.ACCOUNTS, JSON.stringify(accounts));\n  },\n\n  getTrades: (): Trade[] => {\n    if (typeof window === 'undefined') return [];\n    const data = localStorage.getItem(STORAGE_KEYS.TRADES);\n    return data ? JSON.parse(data) : [];\n  },\n\n  setTrades: (trades: Trade[]) => {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(STORAGE_KEYS.TRADES, JSON.stringify(trades));\n  },\n\n  getProfile: (): UserProfile => {\n    if (typeof window === 'undefined') return defaultProfile;\n    const data = localStorage.getItem(STORAGE_KEYS.PROFILE);\n    return data ? JSON.parse(data) : defaultProfile;\n  },\n\n  setProfile: (profile: UserProfile) => {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(STORAGE_KEYS.PROFILE, JSON.stringify(profile));\n  },\n};\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AA0BpC,qBAAqB;AACrB,MAAM,eAAe;IACnB,UAAU;IACV,QAAQ;IACR,SAAS;AACX;AAGO,MAAM,iBAA8B;IACzC,MAAM;IACN,OAAO;IACP,KAAK;AACP;AAGO,MAAM,UAAU;IACrB,aAAa;QACX,wCAAmC,OAAO,EAAE;;QAC5C,MAAM;IAER;IAEA,aAAa,CAAC;QACZ,wCAAmC;;IAErC;IAEA,WAAW;QACT,wCAAmC,OAAO,EAAE;;QAC5C,MAAM;IAER;IAEA,WAAW,CAAC;QACV,wCAAmC;;IAErC;IAEA,YAAY;QACV,wCAAmC,OAAO;;QAC1C,MAAM;IAER;IAEA,YAAY,CAAC;QACX,wCAAmC;;IAErC;AACF","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/context/TradingContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\nimport { Account, Trade, UserProfile, storage, defaultProfile } from \"../lib/data\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface TradingContextType {\n  accounts: Account[];\n  trades: Trade[];\n  profile: UserProfile;\n  addAccount: (name: string, accountNumber: string) => void;\n  updateAccount: (account: Account) => void;\n  deleteAccount: (id: string) => void;\n  addTrade: (trade: Omit<Trade, \"id\">) => void;\n  updateTrade: (trade: Trade) => void;\n  deleteTrade: (id: string) => void;\n  updateProfile: (profile: UserProfile) => void;\n}\n\nconst TradingContext = createContext<TradingContextType | undefined>(undefined);\n\nexport const TradingProvider = ({ children }: { children: ReactNode }) => {\n  const [accounts, setAccounts] = useState<Account[]>([]);\n  const [trades, setTrades] = useState<Trade[]>([]);\n  const [profile, setProfile] = useState<UserProfile>(defaultProfile);\n\n  useEffect(() => {\n    setAccounts(storage.getAccounts());\n    setTrades(storage.getTrades());\n    setProfile(storage.getProfile());\n  }, []);\n\n  useEffect(() => {\n    storage.setAccounts(accounts);\n  }, [accounts]);\n\n  useEffect(() => {\n    storage.setTrades(trades);\n  }, [trades]);\n\n  useEffect(() => {\n    storage.setProfile(profile);\n  }, [profile]);\n\n  const addAccount = (name: string, accountNumber: string) => {\n    const newAccount: Account = {\n      id: uuidv4(),\n      name,\n      accountNumber,\n      createdAt: new Date().toISOString(),\n    };\n    setAccounts((prev) => [...prev, newAccount]);\n  };\n\n  const updateAccount = (updatedAccount: Account) => {\n    setAccounts((prev) =>\n      prev.map((acc) => (acc.id === updatedAccount.id ? updatedAccount : acc))\n    );\n  };\n\n  const deleteAccount = (id: string) => {\n    setAccounts((prev) => prev.filter((acc) => acc.id !== id));\n    setTrades((prev) => prev.filter((trade) => trade.accountId !== id));\n  };\n\n  const addTrade = (trade: Omit<Trade, \"id\">) => {\n    const newTrade: Trade = {\n      id: uuidv4(),\n      ...trade,\n    };\n    setTrades((prev) => [...prev, newTrade]);\n  };\n\n  const updateTrade = (updatedTrade: Trade) => {\n    setTrades((prev) =>\n      prev.map((trade) => (trade.id === updatedTrade.id ? updatedTrade : trade))\n    );\n  };\n\n  const deleteTrade = (id: string) => {\n    setTrades((prev) => prev.filter((trade) => trade.id !== id));\n  };\n\n  const updateProfile = (updatedProfile: UserProfile) => {\n    setProfile(updatedProfile);\n  };\n\n  return (\n    <TradingContext.Provider\n      value={{\n        accounts,\n        trades,\n        profile,\n        addAccount,\n        updateAccount,\n        deleteAccount,\n        addTrade,\n        updateTrade,\n        deleteTrade,\n        updateProfile,\n      }}\n    >\n      {children}\n    </TradingContext.Provider>\n  );\n};\n\nexport const useTrading = (): TradingContextType => {\n  const context = useContext(TradingContext);\n  if (!context) {\n    throw new Error(\"useTrading must be used within a TradingProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAmBA,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAkC;AAE9D,MAAM,kBAAkB,CAAC,EAAE,QAAQ,EAA2B;IACnE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,kHAAA,CAAA,iBAAc;IAElE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY,kHAAA,CAAA,UAAO,CAAC,WAAW;QAC/B,UAAU,kHAAA,CAAA,UAAO,CAAC,SAAS;QAC3B,WAAW,kHAAA,CAAA,UAAO,CAAC,UAAU;IAC/B,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,kHAAA,CAAA,UAAO,CAAC,WAAW,CAAC;IACtB,GAAG;QAAC;KAAS;IAEb,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,kHAAA,CAAA,UAAO,CAAC,SAAS,CAAC;IACpB,GAAG;QAAC;KAAO;IAEX,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,kHAAA,CAAA,UAAO,CAAC,UAAU,CAAC;IACrB,GAAG;QAAC;KAAQ;IAEZ,MAAM,aAAa,CAAC,MAAc;QAChC,MAAM,aAAsB;YAC1B,IAAI,CAAA,GAAA,0KAAA,CAAA,KAAM,AAAD;YACT;YACA;YACA,WAAW,IAAI,OAAO,WAAW;QACnC;QACA,YAAY,CAAC,OAAS;mBAAI;gBAAM;aAAW;IAC7C;IAEA,MAAM,gBAAgB,CAAC;QACrB,YAAY,CAAC,OACX,KAAK,GAAG,CAAC,CAAC,MAAS,IAAI,EAAE,KAAK,eAAe,EAAE,GAAG,iBAAiB;IAEvE;IAEA,MAAM,gBAAgB,CAAC;QACrB,YAAY,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,MAAQ,IAAI,EAAE,KAAK;QACtD,UAAU,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,QAAU,MAAM,SAAS,KAAK;IACjE;IAEA,MAAM,WAAW,CAAC;QAChB,MAAM,WAAkB;YACtB,IAAI,CAAA,GAAA,0KAAA,CAAA,KAAM,AAAD;YACT,GAAG,KAAK;QACV;QACA,UAAU,CAAC,OAAS;mBAAI;gBAAM;aAAS;IACzC;IAEA,MAAM,cAAc,CAAC;QACnB,UAAU,CAAC,OACT,KAAK,GAAG,CAAC,CAAC,QAAW,MAAM,EAAE,KAAK,aAAa,EAAE,GAAG,eAAe;IAEvE;IAEA,MAAM,cAAc,CAAC;QACnB,UAAU,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,QAAU,MAAM,EAAE,KAAK;IAC1D;IAEA,MAAM,gBAAgB,CAAC;QACrB,WAAW;IACb;IAEA,qBACE,8OAAC,eAAe,QAAQ;QACtB,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,MAAM,aAAa;IACxB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/layout/Header.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { useTrading } from \"../../context/TradingContext\";\n\nexport const Header = () => {\n  const { profile } = useTrading();\n\n  return (\n    <header className=\"border-b bg-white\">\n      <div className=\"flex h-16 items-center px-4\">\n        <div className=\"flex items-center space-x-4\">\n          <h1 className=\"text-xl font-bold\">PT_FX Trading Dashboard</h1>\n        </div>\n        <div className=\"ml-auto flex items-center space-x-4\">\n          <div className=\"text-sm\">\n            <p className=\"font-medium\">{profile.name}</p>\n            <p className=\"text-gray-500\">{profile.email}</p>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKO,MAAM,SAAS;IACpB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,aAAU,AAAD;IAE7B,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAG,WAAU;kCAAoB;;;;;;;;;;;8BAEpC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAAe,QAAQ,IAAI;;;;;;0CACxC,8OAAC;gCAAE,WAAU;0CAAiB,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvD","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/layout/Sidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { cn } from \"../../lib/utils\";\n\nconst menuItems = [\n  { name: \"Dashboard\", href: \"/\", icon: \"📊\" },\n  { name: \"Accounts\", href: \"/accounts\", icon: \"🏦\" },\n  { name: \"Trades\", href: \"/trades\", icon: \"📈\" },\n  { name: \"Analytics\", href: \"/analytics\", icon: \"📊\" },\n  { name: \"Profile\", href: \"/profile\", icon: \"👤\" },\n];\n\nexport const Sidebar = () => {\n  const pathname = usePathname();\n\n  return (\n    <aside className=\"w-64 border-r bg-white\">\n      <nav className=\"p-4\">\n        <ul className=\"space-y-2\">\n          {menuItems.map((item) => (\n            <li key={item.href}>\n              <Link\n                href={item.href}\n                className={cn(\n                  \"flex items-center space-x-3 rounded-lg px-3 py-2 text-sm font-medium transition-colors\",\n                  pathname === item.href\n                    ? \"bg-gray-900 text-white\"\n                    : \"text-gray-700 hover:bg-gray-100\"\n                )}\n              >\n                <span>{item.icon}</span>\n                <span>{item.name}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </aside>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AAOA,MAAM,YAAY;IAChB;QAAE,MAAM;QAAa,MAAM;QAAK,MAAM;IAAK;IAC3C;QAAE,MAAM;QAAY,MAAM;QAAa,MAAM;IAAK;IAClD;QAAE,MAAM;QAAU,MAAM;QAAW,MAAM;IAAK;IAC9C;QAAE,MAAM;QAAa,MAAM;QAAc,MAAM;IAAK;IACpD;QAAE,MAAM;QAAW,MAAM;QAAY,MAAM;IAAK;CACjD;AAEM,MAAM,UAAU;IACrB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,qBACE,8OAAC;QAAM,WAAU;kBACf,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAG,WAAU;0BACX,UAAU,GAAG,CAAC,CAAC,qBACd,8OAAC;kCACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BACH,MAAM,KAAK,IAAI;4BACf,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0FACA,aAAa,KAAK,IAAI,GAClB,2BACA;;8CAGN,8OAAC;8CAAM,KAAK,IAAI;;;;;;8CAChB,8OAAC;8CAAM,KAAK,IAAI;;;;;;;;;;;;uBAXX,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;AAmB9B","debugId":null}}]
}