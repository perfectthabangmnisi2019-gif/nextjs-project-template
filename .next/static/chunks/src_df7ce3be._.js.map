{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/DashboardStats.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { useTrading } from \"../../context/TradingContext\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"../ui/card\";\n\nexport const DashboardStats = ({ accounts, trades }: { accounts: any[]; trades: any[] }) => {\n  const { trades: allTrades } = useTrading();\n\n  // Calculate stats\n  const totalTrades = allTrades.length;\n  const profitableTrades = allTrades.filter((trade) => trade.profitLoss > 0).length;\n  const losingTrades = allTrades.filter((trade) => trade.profitLoss < 0).length;\n  const totalProfit = allTrades.reduce((sum, trade) => sum + Math.max(0, trade.profitLoss), 0);\n  const totalLoss = allTrades.reduce((sum, trade) => sum + Math.abs(Math.min(0, trade.profitLoss)), 0);\n  const netProfit = totalProfit - totalLoss;\n\n  const stats = [\n    { title: \"Total Trades\", value: totalTrades, color: \"text-gray-700\" },\n    { title: \"Profitable Trades\", value: profitableTrades, color: \"text-blue-600\" },\n    { title: \"Losing Trades\", value: losingTrades, color: \"text-red-600\" },\n    { title: \"Net Profit\", value: `$${netProfit.toFixed(2)}`, color: netProfit >= 0 ? \"text-blue-600\" : \"text-red-600\" },\n    { title: \"Total Profit\", value: `$${totalProfit.toFixed(2)}`, color: \"text-blue-600\" },\n    { title: \"Total Loss\", value: `$${totalLoss.toFixed(2)}`, color: \"text-red-600\" },\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6\">\n      {stats.map((stat) => (\n        <Card key={stat.title}>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">{stat.title}</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className={`text-2xl font-bold ${stat.color}`}>{stat.value}</div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AACA;;;AAJA;;;AAMO,MAAM,iBAAiB,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAsC;;IACrF,MAAM,EAAE,QAAQ,SAAS,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD;IAEvC,kBAAkB;IAClB,MAAM,cAAc,UAAU,MAAM;IACpC,MAAM,mBAAmB,UAAU,MAAM,CAAC,CAAC,QAAU,MAAM,UAAU,GAAG,GAAG,MAAM;IACjF,MAAM,eAAe,UAAU,MAAM,CAAC,CAAC,QAAU,MAAM,UAAU,GAAG,GAAG,MAAM;IAC7E,MAAM,cAAc,UAAU,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,KAAK,GAAG,CAAC,GAAG,MAAM,UAAU,GAAG;IAC1F,MAAM,YAAY,UAAU,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,MAAM,UAAU,IAAI;IAClG,MAAM,YAAY,cAAc;IAEhC,MAAM,QAAQ;QACZ;YAAE,OAAO;YAAgB,OAAO;YAAa,OAAO;QAAgB;QACpE;YAAE,OAAO;YAAqB,OAAO;YAAkB,OAAO;QAAgB;QAC9E;YAAE,OAAO;YAAiB,OAAO;YAAc,OAAO;QAAe;QACrE;YAAE,OAAO;YAAc,OAAO,CAAC,CAAC,EAAE,UAAU,OAAO,CAAC,IAAI;YAAE,OAAO,aAAa,IAAI,kBAAkB;QAAe;QACnH;YAAE,OAAO;YAAgB,OAAO,CAAC,CAAC,EAAE,YAAY,OAAO,CAAC,IAAI;YAAE,OAAO;QAAgB;QACrF;YAAE,OAAO;YAAc,OAAO,CAAC,CAAC,EAAE,UAAU,OAAO,CAAC,IAAI;YAAE,OAAO;QAAe;KACjF;IAED,qBACE,6LAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC,mIAAA,CAAA,OAAI;;kCACH,6LAAC,mIAAA,CAAA,aAAU;wBAAC,WAAU;kCACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAuB,KAAK,KAAK;;;;;;;;;;;kCAExD,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC;4BAAI,WAAW,CAAC,mBAAmB,EAAE,KAAK,KAAK,EAAE;sCAAG,KAAK,KAAK;;;;;;;;;;;;eALxD,KAAK,KAAK;;;;;;;;;;AAW7B;GAlCa;;QACmB,oIAAA,CAAA,aAAU;;;KAD7B","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/DashboardCharts.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { useTrading } from \"../../context/TradingContext\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"../ui/card\";\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\n\nconst COLORS = {\n  profit: \"#3B82F6\", // blue\n  loss: \"#EF4444\",   // red\n};\n\nexport const DashboardCharts = ({ trades }: { trades: any[] }) => {\n  const { trades: allTrades } = useTrading();\n\n  // Pie chart data: profit vs loss\n  const profitLossData = [\n    {\n      name: \"Profit\",\n      value: allTrades.filter((trade) => trade.profitLoss > 0).reduce((sum, trade) => sum + trade.profitLoss, 0),\n    },\n    {\n      name: \"Loss\",\n      value: Math.abs(allTrades.filter((trade) => trade.profitLoss < 0).reduce((sum, trade) => sum + trade.profitLoss, 0)),\n    },\n  ];\n\n  // Bar chart data: profit/loss per instrument\n  const instrumentData = allTrades.reduce((acc, trade) => {\n    const existing = acc.find((item) => item.instrument === trade.instrument);\n    if (existing) {\n      existing.profit += Math.max(0, trade.profitLoss);\n      existing.loss += Math.abs(Math.min(0, trade.profitLoss));\n    } else {\n      acc.push({\n        instrument: trade.instrument,\n        profit: Math.max(0, trade.profitLoss),\n        loss: Math.abs(Math.min(0, trade.profitLoss)),\n      });\n    }\n    return acc;\n  }, [] as { instrument: string; profit: number; loss: number }[]);\n\n  return (\n    <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\n      {/* Pie Chart */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Profit vs Loss Overview</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart>\n              <Pie\n                data={profitLossData}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                outerRadius={80}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n              >\n                {profitLossData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={index === 0 ? COLORS.profit : COLORS.loss} />\n                ))}\n              </Pie>\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n        </CardContent>\n      </Card>\n\n      {/* Bar Chart */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Performance by Instrument</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={instrumentData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"instrument\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"profit\" fill={COLORS.profit} name=\"Profit\" />\n              <Bar dataKey=\"loss\" fill={COLORS.loss} name=\"Loss\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { useTrading } from \"../context/TradingContext\";\nimport { DashboardStats } from \"../components/dashboard/DashboardStats\";\nimport { DashboardCharts } from \"../components/dashboard/DashboardCharts\";\n\nexport default function DashboardPage() {\n  const { accounts, trades } = useTrading();\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-3xl font-bold text-gray-900\">Dashboard</h1>\n        <p className=\"text-gray-600\">Track your trading performance across all accounts</p>\n      </div>\n\n      <DashboardStats accounts={accounts} trades={trades} />\n      <DashboardCharts trades={trades} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;;;AALA;;;;AAOe,SAAS;;IACtB,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD;IAEtC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,6LAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;0BAG/B,6LAAC,oJAAA,CAAA,iBAAc;gBAAC,UAAU;gBAAU,QAAQ;;;;;;0BAC5C,6LAAC,qJAAA,CAAA,kBAAe;gBAAC,QAAQ;;;;;;;;;;;;AAG/B;GAdwB;;QACO,oIAAA,CAAA,aAAU;;;KADjB","debugId":null}}]
}